<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<head>
  <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
  <title></title>
  <meta name="description" />
  <link rel="stylesheet" type="text/css" href="/docs/style.css" />
  <script src="lib/d3/d3.v3.min.js"></script>
  <script src="lib/d3/sankey.js"></script>
  <script src="d3sparql.js"></script>
  <script src="queries.js"></script>
  <script src="lib/js/topojson.min.js"></script>
  <link rel="stylesheet" href="lib/css/bootstrap-theme.min.css">
 <script type='text/javascript' src='lib/js/jquery.min.js'></script>
  <script type='text/javascript' src='lib/js/leaflet.js?2'></script>
  <script src="lib/js/bootstrap.min.js"></script>
  <link rel="stylesheet" type="text/css" href="lib/css/leaflet.css" />
 
  <script>
    // alert(window.location.hostname);

    $(function() {
      $('title').load("/docs/title.html");
      $("#menuHeader").load("/docs/header.html");
      loadQueries();
     // $('#endpoint').val('http://'+window.location.hostname+'/fuseki/myDataset/query');
    });


    function exec() {

      var selectedgraphtype = d3.select("#graphtype").property("value")
      var endpoint = d3.select("#endpoint").property("value")
      var sparql = d3.select("#sparql").property("value")

      if (selectedgraphtype == 'BarChart')
        d3sparql.query(endpoint, sparql, barchart)
      else if (selectedgraphtype == 'PieChart')
        d3sparql.query(endpoint, sparql, piechart)
      else if (selectedgraphtype == 'ScatterPlot')
        d3sparql.query(endpoint, sparql, scatterplot)
      else if (selectedgraphtype == 'ForceGraph')
        d3sparql.query(endpoint, sparql, forcegraph)
      else if (selectedgraphtype == 'Sankey')
        d3sparql.query(endpoint, sparql, sankey)
      else if (selectedgraphtype == 'RoundTree')
        d3sparql.query(endpoint, sparql, roundtree)
      else if (selectedgraphtype == 'DendroGram')
        d3sparql.query(endpoint, sparql, dendrogram)
      else if (selectedgraphtype == 'TreeMap')
        d3sparql.query(endpoint, sparql, treemap)
      else if (selectedgraphtype == 'TreeMapZoom')
        d3sparql.query(endpoint, sparql, treemapzoom)
      else if (selectedgraphtype == 'SunBurst')
        d3sparql.query(endpoint, sparql, sunburst)
      else if (selectedgraphtype == 'CirclePack')
        d3sparql.query(endpoint, sparql, circlepack)
      else if (selectedgraphtype == 'OpenStreetMap'){
        markerDelAgain();
        document.getElementById("map").style = 'width: 850px; height: 480px; border: 1px solid #AAA;  position:relative; left:0px';
        document.getElementById("result").style.display = 'none';
        sparqlQueryJson(sparql, endpoint, myCallback, true);
      }
       
     if (selectedgraphtype != 'OpenStreetMap'){
        document.getElementById("map").style = 'position:absolute; left:-100000px';
        document.getElementById("result").style.display = 'block';
        
        if(map !== "null" && map!== "undefined"){
	   map.setView(new L.LatLng(20.0, 5.0), 2);
	}
      }
    }

    function barchart(json) {
      var config = {
        "var_x": "pref",
        "var_y": "area",
        "width": 850, // canvas width
        "height": 400, // canvas height
        "margin": 80, // canvas margin
        "selector": "#result"
      }
      d3sparql.barchart(json, config)
    }

    function piechart(json) {
      var config = {
        "label": "pref",
        "size": "area",
        "width": 600, // canvas width
        "height": 600, // canvas height
        "margin": 10, // canvas margin
        "hole": 200, // doughnut hole: 0 for pie, r > 0 for doughnut
        "selector": "#result"
      }
      d3sparql.piechart(json, config)
    }

    function scatterplot(json) {
      var config = {
        "label_x": "genome size (bp) -- circle size corresponds to # of histidine kinase domains",
        "label_y": "# of genes",
        "var_x": "length",
        "var_y": "genes",
        "var_r": "hks",
        "min_r": 1,
        "max_r": 20,
        "width": 850,
        "height": 300,
        "margin_x": 80,
        "margin_y": 40,
        "selector": "#result"
      }
      d3sparql.scatterplot(json, config)
      //d3sparql.htmltable(json)
    }

    function forcegraph(json) {
      var config = {
        "charge": -500,
        "distance": 50,
        "width": 850,
        "height": 550,
        "selector": "#result"
      }
      d3sparql.forcegraph(json, config)
    }

    function sankey(json) {
      var config = {
        // for d3sparql.graph()
        "key1": "parent",
        "key2": "child",
        "label1": "parent_name",
        "label2": "child_name",
        // for d3sparql.sankey()
        "width": 750,
        "height": 1200,
        "margin": 10,
        "selector": "#result"
      }
      d3sparql.sankey(json, config)
    }

    function roundtree(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.roundtree()
        "diameter": 800,
        "angle": 360,
        "depth": 200,
        "radius": 5,
        "selector": "#result"
      }
      d3sparql.roundtree(json, config)
    }

    function dendrogram(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.dendrogram()
        "width": 850,
        "height": 3500,
        "margin": 350,
        "radius": 5,
        "selector": "#result"
      }
      d3sparql.dendrogram(json, config)
    }

    function treemap(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.treemap()
        "width": 850,
        "height": 520,
        "selector": "#result"
      }
      d3sparql.treemap(json, config)
    }

    function treemapzoom(json) {
      var config = {
        "width": 850,
        "height": 500,
        "selector": "#result"
      }
      d3sparql.treemapzoom(json, config)
    }

    function sunburst(json) {
      var config = {
        // for d3spraql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.sunburst()
        "width": 850,
        "height": 720,
        "margin": 150,
        "selector": "#result"
      }
      d3sparql.sunburst(json, config)
    }

    function circlepack(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.circlepack()
        "width": 850,
        "height": 850,
        "diameter": 700,
        "selector": "#result"
      }
      d3sparql.circlepack(json, config)
    }

    function coordmap(json) {
      var config = {
        "var_lat": "lat",
        "var_lng": "lng",
        "width": 850,
        "height": 400,
        "radius": 5,
        "color": "#55C25E",
        "topojson": "lib/d3/map/world-50m.json",
        "selector": "#result"
      }
      d3sparql.coordmap(json, config)
    }

    function namedmap(json) {
      var config = {
        "label": "label",
        "value": "size",
        "color_max": "red",
        "topojson": "lib/d3/map/japan.topojson",
        "mapname": "japan",
        "keyname": "name_local",
        "center_lat": 34,
        "center_lng": 137,
        "scale": 10000,
        "selector": "#result"
      }
      d3sparql.namedmap(json, config)
    }

    function exec_offline() {
      d3.json("cache/dbpedia/area-ja.json", render)
    }

    function toggle() {
      d3sparql.toggle()
    }


    function loadQueries() {

      for (var i = 0; i < data.length; i++) {
        $('#queries').append($("<option/>", {
          value: i,
          text: data[i]['name']
        }));

        if (i == 0){
          $('#sparql').val(data[i]['query']);
	  $('#endpoint').val(data[i]['endpoint']);
	}
      }
    }

    function getval(sel) {
      $('#sparql').val(data[sel.value]['query']);
      $('#endpoint').val(data[sel.value]['endpoint']);
    }
  </script>
  <style>
    .navbar-brand {
      float: left;
      height: 50px;
      font-size: 18px;
      line-height: 20px;
      padding: 15px;
    }

    .navbar-brand:hover,
    .navbar-brand:focus {
      text-decoration: none;
    }

    .navbar-brand > img {
      display: block;
    }

    .bar:hover {
      fill: brown;
    }

    text {
      font-size: 11px;
      pointer-events: none;
    }

    text.parent {
      fill: #1f77b4;
    }

    circle {
      fill: #ccc;
      stroke: #999;
      pointer-events: all;
    }

    circle.parent {
      fill: #1f77b4;
      fill-opacity: .1;
      stroke: steelblue;
    }

    circle.parent:hover {
      stroke: #ff7f0e;
      stroke-width: .5px;
    }

    circle.child {
      pointer-events: none;
    }
  </style>
</head>

<body>

  <nav class="navbar navbar-inverse navbar-fixed-top">

    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar" ar$ <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>

        <a class="navbar-brand" href="/"><img src="/docs/Schaeffler_logo.svg.png" alt="Logo" width="120px" />
        </a>
      </div>
      <div id="navbar" class="collapse navbar-collapse">

        <div id="menuHeader"></div>

      </div>
    </div>


  </nav>
  <div class="container">
    <h3>Visual Querying</h3>

    <div style="margin-top: 30px">
      <table style="border-spacing:5em;">
        <tbody>
          <tr>
            <td width="150px">
              <label for="graphtype">Graph Type:</label>
            </td>
            <td width="300px">
              <select class="form-control" id="graphtype">
                <optgroup label="Chart">
                  <option val="barchart">BarChart</option>
                  <option val="piechart">PieChart</option>
                  <option val="scatterplot">ScatterPlot</option>
                </optgroup>
                <optgroup label="Graph">
                  <option val="forcegraph">ForceGraph</option>
                  <option val="sankey">Sankey</option>
                </optgroup>
                <optgroup label="Tree">
                  <option val="roundtree">RoundTree</option>
                  <option val="dendrogram">
DendroGram</option>
                  <option val="treemap">TreeMap</option>
                  <option val="treemapzoom">TreeMapZoom</option>
                  <option val="sunburst">SunBurst</option>
                  <option val="circlepack">CirclePack</option>
                </optgroup>
                <optgroup label="Map">
                  <option val="openstreetmap">OpenStreetMap</option>
                </optgroup>
              </select>
            </td>
            <td width="20px"></td>
            <td width="80px">
              <label for="queries">Query:</label>
            </td>
            <td width="300px">
              <select class="form-control" id="queries" onchange="getval(this);">
              </select>
            </td>
          </tr>

          <tr>
            <td style="padding-top:10px">
              <label>SPARQL endpoint:</label>
            </td>
            <td colspan="3" style="padding-top:10px">
              <input id="endpoint" value="http://dbpedia.org/sparql" type="text" class="form-control">
            </td>
	    <td align="right" style="padding-top:10px">
              <button class="btn btn-primary" onclick="exec()" style="width:130px; float:right">Execute</button>
              <button class="btn btn-primary" onclick="toggle()" style="width:130px; height:34px; float:right; margin-right:10px" type="button" data-toggle="button" aria-pressed="false" autocomplete="off"><i id="button" class="icon-chevron-up"></i>Toggle</button>
            </td>

          </tr>
        </tbody>
      </table>
      <textarea id="sparql" class="form-control" rows="15" style="margin:20px 0 30px 0;width:850px;display: inline;"> </textarea>
    </div>
    <div id="result"></div>
    <div id="map" style="width: 850px; height: 480px; border: 1px solid #AAA; position:absolute; left:-100000px"></div>
    <script type='text/javascript' src='maps/leaf-demo.js'></script>
  </div>



</body>

</html>
