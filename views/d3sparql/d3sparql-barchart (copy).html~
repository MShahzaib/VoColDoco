<!DOCTYPE html>
<meta charset="utf-8">
<html>
  <head>
    <link rel="stylesheet" type="text/css" href="lib/bootstrap/css/bootstrap.css"/>
    <script src="lib/d3/d3.v3.min.js"></script>
    <script src="d3sparql.js"></script>
    <script src="queries.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
  <link rel="stylesheet" href="http://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css">


    <script>

    document.write(window.location.hostname);

    

    function exec() {

      var selectedgraphtype = d3.select("#graphtype").property("value")
      var endpoint = d3.select("#endpoint").property("value")
      var sparql = d3.select("#sparql").property("value")

      if(selectedgraphtype=='BarChart')
	 d3sparql.query(endpoint, sparql, barchart)
      else if(selectedgraphtype=='PieChart')
	 d3sparql.query(endpoint, sparql, piechart)
      else if(selectedgraphtype=='ScatterPlot')
	 d3sparql.query(endpoint, sparql, scatterplot)
      else if(selectedgraphtype=='ForceGraph')
	 d3sparql.query(endpoint, sparql, forcegraph)
      else if(selectedgraphtype=='Sankey')
	 d3sparql.query(endpoint, sparql, sankey)
      else if(selectedgraphtype=='RoundTree')
	 d3sparql.query(endpoint, sparql, roundtree)
      else if(selectedgraphtype=='DendroGram')
	 d3sparql.query(endpoint, sparql, dendrogram)
      else if(selectedgraphtype=='TreeMap')
	 d3sparql.query(endpoint, sparql, treemap)
      else if(selectedgraphtype=='TreeMapZoom')
	 d3sparql.query(endpoint, sparql, treemapzoom)
      else if(selectedgraphtype=='SunBurst')
	 d3sparql.query(endpoint, sparql, sunburst)
      else if(selectedgraphtype=='CirclePack')
	 d3sparql.query(endpoint, sparql, circlepack)
      else if(selectedgraphtype=='CoordMap')
	 d3sparql.query(endpoint, sparql, coordmap)
      else if(selectedgraphtype=='NamedMap')
	 d3sparql.query(endpoint, sparql, namedmap)
    }
    function barchart(json) {
      var config = {
        "label_x": "Prefecture",
        "label_y": "Area",
        "var_x": "pref",
        "var_y": "area",
        "width":  700,  // canvas width
        "height": 300,  // canvas height
        "margin":  80,  // canvas margin
        "selector": "#result"
      }
      d3sparql.barchart(json, config)
    }
    function piechart(json) {
      var config = {
        "label": "pref",
        "size": "area",
        "width":  600,  // canvas width
        "height": 600,  // canvas height
        "margin":  10,  // canvas margin
        "hole":   200,  // doughnut hole: 0 for pie, r > 0 for doughnut
        "selector": "#result"
      }
      d3sparql.piechart(json, config)
    }
    function scatterplot(json) {
      var config = {
        "label_x": "genome size (bp) -- circle size corresponds to # of histidine kinase domains",
        "label_y": "# of genes",
        "var_x": "length",
        "var_y": "genes",
        "var_r": "hks",
        "min_r": 1,
        "max_r": 20,
        "width": 850,
        "height": 300,
        "margin_x": 80,
        "margin_y": 40,
        "selector": "#result"
      }
      d3sparql.scatterplot(json, config)
      d3sparql.htmltable(json)
    }
    function forcegraph(json) {
      var config = {
        "charge": -500,
        "distance": 50,
        "width": 1000,
        "height": 750,
        "selector": "#result"
      }
      d3sparql.forcegraph(json, config)
    }
    function sankey(json) {
      var config = {
        // for d3sparql.graph()
        "key1": "parent",
        "key2": "child",
        "label1": "parent_name",
        "label2": "child_name",
        // for d3sparql.sankey()
        "width":   750,
        "height": 1200,
        "margin":   10,
        "selector": "#result"
      }
      d3sparql.sankey(json, config)
    }

    function roundtree(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.roundtree()
        "diameter": 800,
        "angle": 360,
        "depth": 200,
        "radius": 5,
        "selector": "#result"
      }
      d3sparql.roundtree(json, config)
    }
    function dendrogram(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.dendrogram()
        "width": 900,
        "height": 4500,
        "margin": 350,
        "radius": 5,
        "selector": "#result"
      }
      d3sparql.dendrogram(json, config)
    }
    function treemap(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.treemap()
        "width": 800,
        "height": 500,
        "selector": "#result"
      }
      d3sparql.treemap(json, config)
    }
    function treemapzoom(json) {
      var config = {
        "width": 1000,
        "height": 600,
        "selector": "#result"
      }
      d3sparql.treemapzoom(json, config)
    }
    function sunburst(json) {
      var config = {
        // for d3spraql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.sunburst()
        "width": 1000,
        "height": 900,
        "margin": 150,
        "selector": "#result"
      }
      d3sparql.sunburst(json, config)
    }
    function circlepack(json) {
      var config = {
        // for d3sparql.tree()
        "root": "root_name",
        "parent": "parent_name",
        "child": "child_name",
        // for d3sparql.circlepack()
        "width": 800,
        "height": 800,
        "diameter": 700,
        "selector": "#result"
      }
      d3sparql.circlepack(json, config)
    }
    function coordmap(json) {
      var config = {
        "var_lat": "lat",
        "var_lng": "lng",
        "width": 960,
        "height": 480,
        "radius": 5,
        "color": "#55C25E",
        "topojson": "lib/d3/map/world-50m.json",
        "selector": "#result"
      }
      d3sparql.coordmap(json, config)
    }
    function namedmap(json) {
      var config = {
        "label":      "label",
        "value":      "size",
        "color_max":  "red",
        "topojson":   "lib/d3/map/japan.topojson",
        "mapname":    "japan",
        "keyname":    "name_local",
        "center_lat": 34,
        "center_lng": 137,
        "scale":      10000,
        "selector":   "#result"
      }
      d3sparql.namedmap(json, config)
    }

    function exec_offline() {
      d3.json("cache/dbpedia/area-ja.json", render)
    }
    function toggle() {
      d3sparql.toggle()
    }


    function loadQueries() {
         
      for (var i = 0; i < data.length; i++) {
           $('#queries').append($("<option/>", { value: i, text: data[i]['name'] }));
           
           if(i==0)
              $('#sparql').val(data[i]['query']);
      }
    }

    function getval(sel) {
        $('#sparql').val(data[sel.value]['query']);
    }

    </script>
    <style>
    .bar:hover {
      fill: brown;
    }
    text {
      font-size: 11px;
      pointer-events: none;
    }
    text.parent {
      fill: #1f77b4;
    }
    circle {
      fill: #ccc;
      stroke: #999;
      pointer-events: all;
    }
    circle.parent {
      fill: #1f77b4;
      fill-opacity: .1;
      stroke: steelblue;
    }
    circle.parent:hover {
      stroke: #ff7f0e;
      stroke-width: .5px;
    }
    circle.child {
      pointer-events: none;
    }
    </style>
  </head>
  <body onload="loadQueries()">

    <div id="query" style="margin: 10px">
      <label for="graphtype">Graphic Type:</label>
      <select class="form-control" id="graphtype">
       <optgroup label="Chart">
        <option val="barchart">BarChart</option>
        <option val="piechart">PieChart</option>
        <option val="scatterplot">ScatterPlot</option>
       </optgroup>
       <optgroup label="Graph">
        <option val="forcegraph">ForceGraph</option>
        <option val="sankey">Sankey</option>
       </optgroup>
       <optgroup label="Tree">
        <option val="roundtree">RoundTree</option>
        <option val="dendrogram">Dendrogram</option>
        <option val="treemap">TreeMap</option>
	<option val="treemapzoom">TreeMapZoom</option>
        <option val="sunburst">SunBurst</option>
        <option val="circlepack">CirclePack</option>
       </optgroup>
      <optgroup label="Map">
        <option val="coordmap">CoordMap</option>
        <option val="namedmap">NamedMap</option>
       </optgroup>
      </select>
      <br>
      <label for="queries">Queries:</label>
        <select class="form-control" id="queries" onchange="getval(this);">
        </select>
      <br>
      <form class="form-inline">
        <label>SPARQL endpoint:</label>
        <div class="input-append">
          <input id="endpoint" class="span5" value="http://dbpedia.org/sparql" type="text">
          <button class="btn" type="button" onclick="exec()">Query</button>
          <button class="btn" type="button" onclick="exec_offline()">Use cache</button>
          <button class="btn" type="button" onclick="toggle()"><i id="button" class="icon-chevron-up"></i></button>
        </div>
      </form>

      <textarea id="sparql" class="span9" rows=15>
      </textarea>
    </div>
    <div id="result"></div>
  </body>
</html>
